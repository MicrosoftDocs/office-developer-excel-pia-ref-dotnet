<Type Name="IWorkbookEvents" FullName="Microsoft.Office.Interop.Excel.IWorkbookEvents">
  <TypeSignature Language="C#" Value="public interface IWorkbookEvents" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IWorkbookEvents" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Office.Interop.Excel.IWorkbookEvents" />
  <TypeSignature Language="VB.NET" Value="Public Interface IWorkbookEvents" />
  <TypeSignature Language="C++ CLI" Value="public interface class IWorkbookEvents" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
    <AssemblyVersion>15.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.Guid("00024412-0001-0000-C000-000000000046")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.TypeLibType(4112)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Reserved for internal use.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="Activate">
      <MemberSignature Language="C#" Value="public void Activate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Activate() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.IWorkbookEvents.Activate" />
      <MemberSignature Language="VB.NET" Value="Public Sub Activate ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Activate();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddinInstall">
      <MemberSignature Language="C#" Value="public void AddinInstall ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddinInstall() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.IWorkbookEvents.AddinInstall" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddinInstall ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddinInstall();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddinUninstall">
      <MemberSignature Language="C#" Value="public void AddinUninstall ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddinUninstall() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.IWorkbookEvents.AddinUninstall" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddinUninstall ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddinUninstall();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AfterSave">
      <MemberSignature Language="C#" Value="public void AfterSave (bool Success);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AfterSave([in]bool Success) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.IWorkbookEvents.AfterSave(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AfterSave (Success As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AfterSave(bool Success);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Success" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="Success">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AfterXmlExport">
      <MemberSignature Language="C#" Value="public void AfterXmlExport (Microsoft.Office.Interop.Excel.XmlMap Map, string Url, Microsoft.Office.Interop.Excel.XlXmlExportResult Result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AfterXmlExport([in]class Microsoft.Office.Interop.Excel.XmlMap Map, [in]string Url, [in]valuetype Microsoft.Office.Interop.Excel.XlXmlExportResult Result) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.IWorkbookEvents.AfterXmlExport(Microsoft.Office.Interop.Excel.XmlMap,System.String,Microsoft.Office.Interop.Excel.XlXmlExportResult)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AfterXmlExport (Map As XmlMap, Url As String, Result As XlXmlExportResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AfterXmlExport(Microsoft::Office::Interop::Excel::XmlMap ^ Map, System::String ^ Url, Microsoft::Office::Interop::Excel::XlXmlExportResult Result);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Map" Type="Microsoft.Office.Interop.Excel.XmlMap" />
        <Parameter Name="Url" Type="System.String" />
        <Parameter Name="Result" Type="Microsoft.Office.Interop.Excel.XlXmlExportResult" />
      </Parameters>
      <Docs>
        <param name="Map">To be added.</param>
        <param name="Url">To be added.</param>
        <param name="Result">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AfterXmlImport">
      <MemberSignature Language="C#" Value="public void AfterXmlImport (Microsoft.Office.Interop.Excel.XmlMap Map, bool IsRefresh, Microsoft.Office.Interop.Excel.XlXmlImportResult Result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AfterXmlImport([in]class Microsoft.Office.Interop.Excel.XmlMap Map, [in]bool IsRefresh, [in]valuetype Microsoft.Office.Interop.Excel.XlXmlImportResult Result) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.IWorkbookEvents.AfterXmlImport(Microsoft.Office.Interop.Excel.XmlMap,System.Boolean,Microsoft.Office.Interop.Excel.XlXmlImportResult)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AfterXmlImport (Map As XmlMap, IsRefresh As Boolean, Result As XlXmlImportResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AfterXmlImport(Microsoft::Office::Interop::Excel::XmlMap ^ Map, bool IsRefresh, Microsoft::Office::Interop::Excel::XlXmlImportResult Result);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Map" Type="Microsoft.Office.Interop.Excel.XmlMap" />
        <Parameter Name="IsRefresh" Type="System.Boolean" />
        <Parameter Name="Result" Type="Microsoft.Office.Interop.Excel.XlXmlImportResult" />
      </Parameters>
      <Docs>
        <param name="Map">To be added.</param>
        <param name="IsRefresh">To be added.</param>
        <param name="Result">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BeforeClose">
      <MemberSignature Language="C#" Value="public void BeforeClose (out bool Cancel);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void BeforeClose([out] bool&amp; Cancel) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.IWorkbookEvents.BeforeClose(System.Boolean@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub BeforeClose (ByRef Cancel As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void BeforeClose([Runtime::InteropServices::Out] bool % Cancel);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Cancel" Type="System.Boolean&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="Cancel">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BeforePrint">
      <MemberSignature Language="C#" Value="public void BeforePrint (out bool Cancel);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void BeforePrint([out] bool&amp; Cancel) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.IWorkbookEvents.BeforePrint(System.Boolean@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub BeforePrint (ByRef Cancel As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void BeforePrint([Runtime::InteropServices::Out] bool % Cancel);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Cancel" Type="System.Boolean&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="Cancel">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BeforeSave">
      <MemberSignature Language="C#" Value="public void BeforeSave (bool SaveAsUI, out bool Cancel);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void BeforeSave([in]bool SaveAsUI, [out] bool&amp; Cancel) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.IWorkbookEvents.BeforeSave(System.Boolean,System.Boolean@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub BeforeSave (SaveAsUI As Boolean, ByRef Cancel As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void BeforeSave(bool SaveAsUI, [Runtime::InteropServices::Out] bool % Cancel);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="SaveAsUI" Type="System.Boolean" />
        <Parameter Name="Cancel" Type="System.Boolean&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="SaveAsUI">To be added.</param>
        <param name="Cancel">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BeforeXmlExport">
      <MemberSignature Language="C#" Value="public void BeforeXmlExport (Microsoft.Office.Interop.Excel.XmlMap Map, string Url, out bool Cancel);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void BeforeXmlExport([in]class Microsoft.Office.Interop.Excel.XmlMap Map, [in]string Url, [out] bool&amp; Cancel) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.IWorkbookEvents.BeforeXmlExport(Microsoft.Office.Interop.Excel.XmlMap,System.String,System.Boolean@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub BeforeXmlExport (Map As XmlMap, Url As String, ByRef Cancel As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void BeforeXmlExport(Microsoft::Office::Interop::Excel::XmlMap ^ Map, System::String ^ Url, [Runtime::InteropServices::Out] bool % Cancel);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Map" Type="Microsoft.Office.Interop.Excel.XmlMap" />
        <Parameter Name="Url" Type="System.String" />
        <Parameter Name="Cancel" Type="System.Boolean&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="Map">To be added.</param>
        <param name="Url">To be added.</param>
        <param name="Cancel">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BeforeXmlImport">
      <MemberSignature Language="C#" Value="public void BeforeXmlImport (Microsoft.Office.Interop.Excel.XmlMap Map, string Url, bool IsRefresh, out bool Cancel);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void BeforeXmlImport([in]class Microsoft.Office.Interop.Excel.XmlMap Map, [in]string Url, [in]bool IsRefresh, [out] bool&amp; Cancel) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.IWorkbookEvents.BeforeXmlImport(Microsoft.Office.Interop.Excel.XmlMap,System.String,System.Boolean,System.Boolean@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub BeforeXmlImport (Map As XmlMap, Url As String, IsRefresh As Boolean, ByRef Cancel As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void BeforeXmlImport(Microsoft::Office::Interop::Excel::XmlMap ^ Map, System::String ^ Url, bool IsRefresh, [Runtime::InteropServices::Out] bool % Cancel);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Map" Type="Microsoft.Office.Interop.Excel.XmlMap" />
        <Parameter Name="Url" Type="System.String" />
        <Parameter Name="IsRefresh" Type="System.Boolean" />
        <Parameter Name="Cancel" Type="System.Boolean&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="Map">To be added.</param>
        <param name="Url">To be added.</param>
        <param name="IsRefresh">To be added.</param>
        <param name="Cancel">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Deactivate">
      <MemberSignature Language="C#" Value="public void Deactivate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Deactivate() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.IWorkbookEvents.Deactivate" />
      <MemberSignature Language="VB.NET" Value="Public Sub Deactivate ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Deactivate();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ModelChange">
      <MemberSignature Language="C#" Value="public void ModelChange (Microsoft.Office.Interop.Excel.ModelChanges Changes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ModelChange([in]class Microsoft.Office.Interop.Excel.ModelChanges Changes) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.IWorkbookEvents.ModelChange(Microsoft.Office.Interop.Excel.ModelChanges)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ModelChange (Changes As ModelChanges)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ModelChange(Microsoft::Office::Interop::Excel::ModelChanges ^ Changes);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Changes" Type="Microsoft.Office.Interop.Excel.ModelChanges" />
      </Parameters>
      <Docs>
        <param name="Changes">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NewChart">
      <MemberSignature Language="C#" Value="public void NewChart (Microsoft.Office.Interop.Excel.Chart Ch);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void NewChart([in]class Microsoft.Office.Interop.Excel.Chart Ch) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.IWorkbookEvents.NewChart(Microsoft.Office.Interop.Excel.Chart)" />
      <MemberSignature Language="VB.NET" Value="Public Sub NewChart (Ch As Chart)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void NewChart(Microsoft::Office::Interop::Excel::Chart ^ Ch);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Ch" Type="Microsoft.Office.Interop.Excel.Chart" />
      </Parameters>
      <Docs>
        <param name="Ch">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NewSheet">
      <MemberSignature Language="C#" Value="public void NewSheet (object Sh);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void NewSheet([in]object Sh) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.IWorkbookEvents.NewSheet(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub NewSheet (Sh As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void NewSheet(System::Object ^ Sh);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Sh" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Sh">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Open">
      <MemberSignature Language="C#" Value="public void Open ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Open() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.IWorkbookEvents.Open" />
      <MemberSignature Language="VB.NET" Value="Public Sub Open ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Open();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PivotTableCloseConnection">
      <MemberSignature Language="C#" Value="public void PivotTableCloseConnection (Microsoft.Office.Interop.Excel.PivotTable Target);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PivotTableCloseConnection([in]class Microsoft.Office.Interop.Excel.PivotTable Target) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.IWorkbookEvents.PivotTableCloseConnection(Microsoft.Office.Interop.Excel.PivotTable)" />
      <MemberSignature Language="VB.NET" Value="Public Sub PivotTableCloseConnection (Target As PivotTable)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void PivotTableCloseConnection(Microsoft::Office::Interop::Excel::PivotTable ^ Target);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Target" Type="Microsoft.Office.Interop.Excel.PivotTable" />
      </Parameters>
      <Docs>
        <param name="Target">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PivotTableOpenConnection">
      <MemberSignature Language="C#" Value="public void PivotTableOpenConnection (Microsoft.Office.Interop.Excel.PivotTable Target);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PivotTableOpenConnection([in]class Microsoft.Office.Interop.Excel.PivotTable Target) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.IWorkbookEvents.PivotTableOpenConnection(Microsoft.Office.Interop.Excel.PivotTable)" />
      <MemberSignature Language="VB.NET" Value="Public Sub PivotTableOpenConnection (Target As PivotTable)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void PivotTableOpenConnection(Microsoft::Office::Interop::Excel::PivotTable ^ Target);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Target" Type="Microsoft.Office.Interop.Excel.PivotTable" />
      </Parameters>
      <Docs>
        <param name="Target">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RowsetComplete">
      <MemberSignature Language="C#" Value="public void RowsetComplete (string Description, string Sheet, bool Success);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RowsetComplete([in]string Description, [in]string Sheet, [in]bool Success) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.IWorkbookEvents.RowsetComplete(System.String,System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RowsetComplete (Description As String, Sheet As String, Success As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RowsetComplete(System::String ^ Description, System::String ^ Sheet, bool Success);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Description" Type="System.String" />
        <Parameter Name="Sheet" Type="System.String" />
        <Parameter Name="Success" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="Description">To be added.</param>
        <param name="Sheet">To be added.</param>
        <param name="Success">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SheetActivate">
      <MemberSignature Language="C#" Value="public void SheetActivate (object Sh);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SheetActivate([in]object Sh) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.IWorkbookEvents.SheetActivate(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SheetActivate (Sh As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SheetActivate(System::Object ^ Sh);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Sh" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Sh">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SheetBeforeDelete">
      <MemberSignature Language="C#" Value="public void SheetBeforeDelete (object Sh);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SheetBeforeDelete([in]object Sh) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.IWorkbookEvents.SheetBeforeDelete(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SheetBeforeDelete (Sh As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SheetBeforeDelete(System::Object ^ Sh);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Sh" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Sh">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SheetBeforeDoubleClick">
      <MemberSignature Language="C#" Value="public void SheetBeforeDoubleClick (object Sh, Microsoft.Office.Interop.Excel.Range Target, out bool Cancel);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SheetBeforeDoubleClick([in]object Sh, [in]class Microsoft.Office.Interop.Excel.Range Target, [out] bool&amp; Cancel) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.IWorkbookEvents.SheetBeforeDoubleClick(System.Object,Microsoft.Office.Interop.Excel.Range,System.Boolean@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SheetBeforeDoubleClick (Sh As Object, Target As Range, ByRef Cancel As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SheetBeforeDoubleClick(System::Object ^ Sh, Microsoft::Office::Interop::Excel::Range ^ Target, [Runtime::InteropServices::Out] bool % Cancel);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Sh" Type="System.Object" />
        <Parameter Name="Target" Type="Microsoft.Office.Interop.Excel.Range" />
        <Parameter Name="Cancel" Type="System.Boolean&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="Sh">To be added.</param>
        <param name="Target">To be added.</param>
        <param name="Cancel">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SheetBeforeRightClick">
      <MemberSignature Language="C#" Value="public void SheetBeforeRightClick (object Sh, Microsoft.Office.Interop.Excel.Range Target, out bool Cancel);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SheetBeforeRightClick([in]object Sh, [in]class Microsoft.Office.Interop.Excel.Range Target, [out] bool&amp; Cancel) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.IWorkbookEvents.SheetBeforeRightClick(System.Object,Microsoft.Office.Interop.Excel.Range,System.Boolean@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SheetBeforeRightClick (Sh As Object, Target As Range, ByRef Cancel As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SheetBeforeRightClick(System::Object ^ Sh, Microsoft::Office::Interop::Excel::Range ^ Target, [Runtime::InteropServices::Out] bool % Cancel);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Sh" Type="System.Object" />
        <Parameter Name="Target" Type="Microsoft.Office.Interop.Excel.Range" />
        <Parameter Name="Cancel" Type="System.Boolean&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="Sh">To be added.</param>
        <param name="Target">To be added.</param>
        <param name="Cancel">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SheetCalculate">
      <MemberSignature Language="C#" Value="public void SheetCalculate (object Sh);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SheetCalculate([in]object Sh) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.IWorkbookEvents.SheetCalculate(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SheetCalculate (Sh As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SheetCalculate(System::Object ^ Sh);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Sh" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Sh">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SheetChange">
      <MemberSignature Language="C#" Value="public void SheetChange (object Sh, Microsoft.Office.Interop.Excel.Range Target);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SheetChange([in]object Sh, [in]class Microsoft.Office.Interop.Excel.Range Target) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.IWorkbookEvents.SheetChange(System.Object,Microsoft.Office.Interop.Excel.Range)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SheetChange (Sh As Object, Target As Range)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SheetChange(System::Object ^ Sh, Microsoft::Office::Interop::Excel::Range ^ Target);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Sh" Type="System.Object" />
        <Parameter Name="Target" Type="Microsoft.Office.Interop.Excel.Range" />
      </Parameters>
      <Docs>
        <param name="Sh">To be added.</param>
        <param name="Target">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SheetDeactivate">
      <MemberSignature Language="C#" Value="public void SheetDeactivate (object Sh);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SheetDeactivate([in]object Sh) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.IWorkbookEvents.SheetDeactivate(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SheetDeactivate (Sh As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SheetDeactivate(System::Object ^ Sh);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Sh" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Sh">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SheetFollowHyperlink">
      <MemberSignature Language="C#" Value="public void SheetFollowHyperlink (object Sh, Microsoft.Office.Interop.Excel.Hyperlink Target);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SheetFollowHyperlink([in]object Sh, [in]class Microsoft.Office.Interop.Excel.Hyperlink Target) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.IWorkbookEvents.SheetFollowHyperlink(System.Object,Microsoft.Office.Interop.Excel.Hyperlink)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SheetFollowHyperlink (Sh As Object, Target As Hyperlink)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SheetFollowHyperlink(System::Object ^ Sh, Microsoft::Office::Interop::Excel::Hyperlink ^ Target);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Sh" Type="System.Object" />
        <Parameter Name="Target" Type="Microsoft.Office.Interop.Excel.Hyperlink" />
      </Parameters>
      <Docs>
        <param name="Sh">To be added.</param>
        <param name="Target">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SheetLensGalleryRenderComplete">
      <MemberSignature Language="C#" Value="public void SheetLensGalleryRenderComplete (object Sh);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SheetLensGalleryRenderComplete([in]object Sh) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.IWorkbookEvents.SheetLensGalleryRenderComplete(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SheetLensGalleryRenderComplete (Sh As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SheetLensGalleryRenderComplete(System::Object ^ Sh);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Sh" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Sh">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SheetPivotTableAfterValueChange">
      <MemberSignature Language="C#" Value="public void SheetPivotTableAfterValueChange (object Sh, Microsoft.Office.Interop.Excel.PivotTable TargetPivotTable, Microsoft.Office.Interop.Excel.Range TargetRange);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SheetPivotTableAfterValueChange([in]object Sh, [in]class Microsoft.Office.Interop.Excel.PivotTable TargetPivotTable, [in]class Microsoft.Office.Interop.Excel.Range TargetRange) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.IWorkbookEvents.SheetPivotTableAfterValueChange(System.Object,Microsoft.Office.Interop.Excel.PivotTable,Microsoft.Office.Interop.Excel.Range)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SheetPivotTableAfterValueChange (Sh As Object, TargetPivotTable As PivotTable, TargetRange As Range)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SheetPivotTableAfterValueChange(System::Object ^ Sh, Microsoft::Office::Interop::Excel::PivotTable ^ TargetPivotTable, Microsoft::Office::Interop::Excel::Range ^ TargetRange);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Sh" Type="System.Object" />
        <Parameter Name="TargetPivotTable" Type="Microsoft.Office.Interop.Excel.PivotTable" />
        <Parameter Name="TargetRange" Type="Microsoft.Office.Interop.Excel.Range" />
      </Parameters>
      <Docs>
        <param name="Sh">To be added.</param>
        <param name="TargetPivotTable">To be added.</param>
        <param name="TargetRange">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SheetPivotTableBeforeAllocateChanges">
      <MemberSignature Language="C#" Value="public void SheetPivotTableBeforeAllocateChanges (object Sh, Microsoft.Office.Interop.Excel.PivotTable TargetPivotTable, int ValueChangeStart, int ValueChangeEnd, out bool Cancel);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SheetPivotTableBeforeAllocateChanges([in]object Sh, [in]class Microsoft.Office.Interop.Excel.PivotTable TargetPivotTable, [in]int32 ValueChangeStart, [in]int32 ValueChangeEnd, [out] bool&amp; Cancel) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.IWorkbookEvents.SheetPivotTableBeforeAllocateChanges(System.Object,Microsoft.Office.Interop.Excel.PivotTable,System.Int32,System.Int32,System.Boolean@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SheetPivotTableBeforeAllocateChanges (Sh As Object, TargetPivotTable As PivotTable, ValueChangeStart As Integer, ValueChangeEnd As Integer, ByRef Cancel As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SheetPivotTableBeforeAllocateChanges(System::Object ^ Sh, Microsoft::Office::Interop::Excel::PivotTable ^ TargetPivotTable, int ValueChangeStart, int ValueChangeEnd, [Runtime::InteropServices::Out] bool % Cancel);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Sh" Type="System.Object" />
        <Parameter Name="TargetPivotTable" Type="Microsoft.Office.Interop.Excel.PivotTable" />
        <Parameter Name="ValueChangeStart" Type="System.Int32" />
        <Parameter Name="ValueChangeEnd" Type="System.Int32" />
        <Parameter Name="Cancel" Type="System.Boolean&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="Sh">To be added.</param>
        <param name="TargetPivotTable">To be added.</param>
        <param name="ValueChangeStart">To be added.</param>
        <param name="ValueChangeEnd">To be added.</param>
        <param name="Cancel">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SheetPivotTableBeforeCommitChanges">
      <MemberSignature Language="C#" Value="public void SheetPivotTableBeforeCommitChanges (object Sh, Microsoft.Office.Interop.Excel.PivotTable TargetPivotTable, int ValueChangeStart, int ValueChangeEnd, out bool Cancel);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SheetPivotTableBeforeCommitChanges([in]object Sh, [in]class Microsoft.Office.Interop.Excel.PivotTable TargetPivotTable, [in]int32 ValueChangeStart, [in]int32 ValueChangeEnd, [out] bool&amp; Cancel) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.IWorkbookEvents.SheetPivotTableBeforeCommitChanges(System.Object,Microsoft.Office.Interop.Excel.PivotTable,System.Int32,System.Int32,System.Boolean@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SheetPivotTableBeforeCommitChanges (Sh As Object, TargetPivotTable As PivotTable, ValueChangeStart As Integer, ValueChangeEnd As Integer, ByRef Cancel As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SheetPivotTableBeforeCommitChanges(System::Object ^ Sh, Microsoft::Office::Interop::Excel::PivotTable ^ TargetPivotTable, int ValueChangeStart, int ValueChangeEnd, [Runtime::InteropServices::Out] bool % Cancel);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Sh" Type="System.Object" />
        <Parameter Name="TargetPivotTable" Type="Microsoft.Office.Interop.Excel.PivotTable" />
        <Parameter Name="ValueChangeStart" Type="System.Int32" />
        <Parameter Name="ValueChangeEnd" Type="System.Int32" />
        <Parameter Name="Cancel" Type="System.Boolean&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="Sh">To be added.</param>
        <param name="TargetPivotTable">To be added.</param>
        <param name="ValueChangeStart">To be added.</param>
        <param name="ValueChangeEnd">To be added.</param>
        <param name="Cancel">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SheetPivotTableBeforeDiscardChanges">
      <MemberSignature Language="C#" Value="public void SheetPivotTableBeforeDiscardChanges (object Sh, Microsoft.Office.Interop.Excel.PivotTable TargetPivotTable, int ValueChangeStart, int ValueChangeEnd);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SheetPivotTableBeforeDiscardChanges([in]object Sh, [in]class Microsoft.Office.Interop.Excel.PivotTable TargetPivotTable, [in]int32 ValueChangeStart, [in]int32 ValueChangeEnd) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.IWorkbookEvents.SheetPivotTableBeforeDiscardChanges(System.Object,Microsoft.Office.Interop.Excel.PivotTable,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SheetPivotTableBeforeDiscardChanges (Sh As Object, TargetPivotTable As PivotTable, ValueChangeStart As Integer, ValueChangeEnd As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SheetPivotTableBeforeDiscardChanges(System::Object ^ Sh, Microsoft::Office::Interop::Excel::PivotTable ^ TargetPivotTable, int ValueChangeStart, int ValueChangeEnd);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Sh" Type="System.Object" />
        <Parameter Name="TargetPivotTable" Type="Microsoft.Office.Interop.Excel.PivotTable" />
        <Parameter Name="ValueChangeStart" Type="System.Int32" />
        <Parameter Name="ValueChangeEnd" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="Sh">To be added.</param>
        <param name="TargetPivotTable">To be added.</param>
        <param name="ValueChangeStart">To be added.</param>
        <param name="ValueChangeEnd">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SheetPivotTableChangeSync">
      <MemberSignature Language="C#" Value="public void SheetPivotTableChangeSync (object Sh, Microsoft.Office.Interop.Excel.PivotTable Target);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SheetPivotTableChangeSync([in]object Sh, [in]class Microsoft.Office.Interop.Excel.PivotTable Target) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.IWorkbookEvents.SheetPivotTableChangeSync(System.Object,Microsoft.Office.Interop.Excel.PivotTable)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SheetPivotTableChangeSync (Sh As Object, Target As PivotTable)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SheetPivotTableChangeSync(System::Object ^ Sh, Microsoft::Office::Interop::Excel::PivotTable ^ Target);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Sh" Type="System.Object" />
        <Parameter Name="Target" Type="Microsoft.Office.Interop.Excel.PivotTable" />
      </Parameters>
      <Docs>
        <param name="Sh">To be added.</param>
        <param name="Target">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SheetPivotTableUpdate">
      <MemberSignature Language="C#" Value="public void SheetPivotTableUpdate (object Sh, Microsoft.Office.Interop.Excel.PivotTable Target);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SheetPivotTableUpdate([in]object Sh, [in]class Microsoft.Office.Interop.Excel.PivotTable Target) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.IWorkbookEvents.SheetPivotTableUpdate(System.Object,Microsoft.Office.Interop.Excel.PivotTable)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SheetPivotTableUpdate (Sh As Object, Target As PivotTable)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SheetPivotTableUpdate(System::Object ^ Sh, Microsoft::Office::Interop::Excel::PivotTable ^ Target);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Sh" Type="System.Object" />
        <Parameter Name="Target" Type="Microsoft.Office.Interop.Excel.PivotTable" />
      </Parameters>
      <Docs>
        <param name="Sh">To be added.</param>
        <param name="Target">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SheetSelectionChange">
      <MemberSignature Language="C#" Value="public void SheetSelectionChange (object Sh, Microsoft.Office.Interop.Excel.Range Target);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SheetSelectionChange([in]object Sh, [in]class Microsoft.Office.Interop.Excel.Range Target) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.IWorkbookEvents.SheetSelectionChange(System.Object,Microsoft.Office.Interop.Excel.Range)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SheetSelectionChange (Sh As Object, Target As Range)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SheetSelectionChange(System::Object ^ Sh, Microsoft::Office::Interop::Excel::Range ^ Target);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Sh" Type="System.Object" />
        <Parameter Name="Target" Type="Microsoft.Office.Interop.Excel.Range" />
      </Parameters>
      <Docs>
        <param name="Sh">To be added.</param>
        <param name="Target">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SheetTableUpdate">
      <MemberSignature Language="C#" Value="public void SheetTableUpdate (object Sh, Microsoft.Office.Interop.Excel.TableObject Target);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SheetTableUpdate([in]object Sh, [in]class Microsoft.Office.Interop.Excel.TableObject Target) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.IWorkbookEvents.SheetTableUpdate(System.Object,Microsoft.Office.Interop.Excel.TableObject)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SheetTableUpdate (Sh As Object, Target As TableObject)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SheetTableUpdate(System::Object ^ Sh, Microsoft::Office::Interop::Excel::TableObject ^ Target);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Sh" Type="System.Object" />
        <Parameter Name="Target" Type="Microsoft.Office.Interop.Excel.TableObject" />
      </Parameters>
      <Docs>
        <param name="Sh">To be added.</param>
        <param name="Target">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Sync">
      <MemberSignature Language="C#" Value="public void Sync (Microsoft.Office.Core.MsoSyncEventType SyncEventType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Sync([in]valuetype Microsoft.Office.Core.MsoSyncEventType SyncEventType) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.IWorkbookEvents.Sync(Microsoft.Office.Core.MsoSyncEventType)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Sync (SyncEventType As MsoSyncEventType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Sync(Microsoft::Office::Core::MsoSyncEventType SyncEventType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="SyncEventType" Type="Microsoft.Office.Core.MsoSyncEventType" />
      </Parameters>
      <Docs>
        <param name="SyncEventType">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WindowActivate">
      <MemberSignature Language="C#" Value="public void WindowActivate (Microsoft.Office.Interop.Excel.Window Wn);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WindowActivate([in]class Microsoft.Office.Interop.Excel.Window Wn) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.IWorkbookEvents.WindowActivate(Microsoft.Office.Interop.Excel.Window)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WindowActivate (Wn As Window)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WindowActivate(Microsoft::Office::Interop::Excel::Window ^ Wn);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Wn" Type="Microsoft.Office.Interop.Excel.Window" />
      </Parameters>
      <Docs>
        <param name="Wn">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WindowDeactivate">
      <MemberSignature Language="C#" Value="public void WindowDeactivate (Microsoft.Office.Interop.Excel.Window Wn);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WindowDeactivate([in]class Microsoft.Office.Interop.Excel.Window Wn) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.IWorkbookEvents.WindowDeactivate(Microsoft.Office.Interop.Excel.Window)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WindowDeactivate (Wn As Window)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WindowDeactivate(Microsoft::Office::Interop::Excel::Window ^ Wn);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Wn" Type="Microsoft.Office.Interop.Excel.Window" />
      </Parameters>
      <Docs>
        <param name="Wn">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WindowResize">
      <MemberSignature Language="C#" Value="public void WindowResize (Microsoft.Office.Interop.Excel.Window Wn);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WindowResize([in]class Microsoft.Office.Interop.Excel.Window Wn) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.IWorkbookEvents.WindowResize(Microsoft.Office.Interop.Excel.Window)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WindowResize (Wn As Window)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WindowResize(Microsoft::Office::Interop::Excel::Window ^ Wn);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Wn" Type="Microsoft.Office.Interop.Excel.Window" />
      </Parameters>
      <Docs>
        <param name="Wn">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>