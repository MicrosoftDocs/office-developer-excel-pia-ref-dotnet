<Type Name="XlApplicationInternational" FullName="Microsoft.Office.Interop.Excel.XlApplicationInternational">
  <TypeSignature Language="C#" Value="public enum XlApplicationInternational" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed XlApplicationInternational extends System.Enum" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Office.Interop.Excel.XlApplicationInternational" />
  <TypeSignature Language="VB.NET" Value="Public Enum XlApplicationInternational" />
  <TypeSignature Language="C++ CLI" Value="public enum class XlApplicationInternational" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
    <AssemblyVersion>15.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Docs>
    <summary>Specifies country/region and international settings.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="xl24HourClock">
      <MemberSignature Language="C#" Value="xl24HourClock" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.Office.Interop.Excel.XlApplicationInternational xl24HourClock = int32(33)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.Office.Interop.Excel.XlApplicationInternational.xl24HourClock" />
      <MemberSignature Language="VB.NET" Value="xl24HourClock" />
      <MemberSignature Language="C++ CLI" Value="xl24HourClock" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlApplicationInternational</ReturnType>
      </ReturnValue>
      <MemberValue>33</MemberValue>
      <Docs>
        <summary>
          <b>True</b> if you’re using 24-hour time; <b>False</b> if you’re using 12-hour time.</summary>
      </Docs>
    </Member>
    <Member MemberName="xl4DigitYears">
      <MemberSignature Language="C#" Value="xl4DigitYears" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.Office.Interop.Excel.XlApplicationInternational xl4DigitYears = int32(43)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.Office.Interop.Excel.XlApplicationInternational.xl4DigitYears" />
      <MemberSignature Language="VB.NET" Value="xl4DigitYears" />
      <MemberSignature Language="C++ CLI" Value="xl4DigitYears" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlApplicationInternational</ReturnType>
      </ReturnValue>
      <MemberValue>43</MemberValue>
      <Docs>
        <summary>
          <b>True</b> if you’re using four-digit years; <b>False</b> if you’re using two-digit years.</summary>
      </Docs>
    </Member>
    <Member MemberName="xlAlternateArraySeparator">
      <MemberSignature Language="C#" Value="xlAlternateArraySeparator" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.Office.Interop.Excel.XlApplicationInternational xlAlternateArraySeparator = int32(16)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.Office.Interop.Excel.XlApplicationInternational.xlAlternateArraySeparator" />
      <MemberSignature Language="VB.NET" Value="xlAlternateArraySeparator" />
      <MemberSignature Language="C++ CLI" Value="xlAlternateArraySeparator" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlApplicationInternational</ReturnType>
      </ReturnValue>
      <MemberValue>16</MemberValue>
      <Docs>
        <summary>Alternate array item separator to be used if the current array separator is the same as the decimal separator.</summary>
      </Docs>
    </Member>
    <Member MemberName="xlColumnSeparator">
      <MemberSignature Language="C#" Value="xlColumnSeparator" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.Office.Interop.Excel.XlApplicationInternational xlColumnSeparator = int32(14)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.Office.Interop.Excel.XlApplicationInternational.xlColumnSeparator" />
      <MemberSignature Language="VB.NET" Value="xlColumnSeparator" />
      <MemberSignature Language="C++ CLI" Value="xlColumnSeparator" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlApplicationInternational</ReturnType>
      </ReturnValue>
      <MemberValue>14</MemberValue>
      <Docs>
        <summary>Character used to separate columns in array literals.</summary>
      </Docs>
    </Member>
    <Member MemberName="xlCountryCode">
      <MemberSignature Language="C#" Value="xlCountryCode" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.Office.Interop.Excel.XlApplicationInternational xlCountryCode = int32(1)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.Office.Interop.Excel.XlApplicationInternational.xlCountryCode" />
      <MemberSignature Language="VB.NET" Value="xlCountryCode" />
      <MemberSignature Language="C++ CLI" Value="xlCountryCode" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlApplicationInternational</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>Country/Region version of Microsoft Excel.</summary>
      </Docs>
    </Member>
    <Member MemberName="xlCountrySetting">
      <MemberSignature Language="C#" Value="xlCountrySetting" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.Office.Interop.Excel.XlApplicationInternational xlCountrySetting = int32(2)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.Office.Interop.Excel.XlApplicationInternational.xlCountrySetting" />
      <MemberSignature Language="VB.NET" Value="xlCountrySetting" />
      <MemberSignature Language="C++ CLI" Value="xlCountrySetting" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlApplicationInternational</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary>Current country/region setting in the Windows Control Panel.</summary>
      </Docs>
    </Member>
    <Member MemberName="xlCurrencyBefore">
      <MemberSignature Language="C#" Value="xlCurrencyBefore" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.Office.Interop.Excel.XlApplicationInternational xlCurrencyBefore = int32(37)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.Office.Interop.Excel.XlApplicationInternational.xlCurrencyBefore" />
      <MemberSignature Language="VB.NET" Value="xlCurrencyBefore" />
      <MemberSignature Language="C++ CLI" Value="xlCurrencyBefore" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlApplicationInternational</ReturnType>
      </ReturnValue>
      <MemberValue>37</MemberValue>
      <Docs>
        <summary>
          <b>True</b> if the currency symbol precedes the currency values; <b>False</b> if it follows them.</summary>
      </Docs>
    </Member>
    <Member MemberName="xlCurrencyCode">
      <MemberSignature Language="C#" Value="xlCurrencyCode" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.Office.Interop.Excel.XlApplicationInternational xlCurrencyCode = int32(25)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.Office.Interop.Excel.XlApplicationInternational.xlCurrencyCode" />
      <MemberSignature Language="VB.NET" Value="xlCurrencyCode" />
      <MemberSignature Language="C++ CLI" Value="xlCurrencyCode" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlApplicationInternational</ReturnType>
      </ReturnValue>
      <MemberValue>25</MemberValue>
      <Docs>
        <summary>Currency symbol.</summary>
      </Docs>
    </Member>
    <Member MemberName="xlCurrencyDigits">
      <MemberSignature Language="C#" Value="xlCurrencyDigits" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.Office.Interop.Excel.XlApplicationInternational xlCurrencyDigits = int32(27)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.Office.Interop.Excel.XlApplicationInternational.xlCurrencyDigits" />
      <MemberSignature Language="VB.NET" Value="xlCurrencyDigits" />
      <MemberSignature Language="C++ CLI" Value="xlCurrencyDigits" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlApplicationInternational</ReturnType>
      </ReturnValue>
      <MemberValue>27</MemberValue>
      <Docs>
        <summary>Number of decimal digits to be used in currency formats.</summary>
      </Docs>
    </Member>
    <Member MemberName="xlCurrencyLeadingZeros">
      <MemberSignature Language="C#" Value="xlCurrencyLeadingZeros" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.Office.Interop.Excel.XlApplicationInternational xlCurrencyLeadingZeros = int32(40)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.Office.Interop.Excel.XlApplicationInternational.xlCurrencyLeadingZeros" />
      <MemberSignature Language="VB.NET" Value="xlCurrencyLeadingZeros" />
      <MemberSignature Language="C++ CLI" Value="xlCurrencyLeadingZeros" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlApplicationInternational</ReturnType>
      </ReturnValue>
      <MemberValue>40</MemberValue>
      <Docs>
        <summary>
          <b>True</b> if leading zeros are displayed for zero currency values.</summary>
      </Docs>
    </Member>
    <Member MemberName="xlCurrencyMinusSign">
      <MemberSignature Language="C#" Value="xlCurrencyMinusSign" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.Office.Interop.Excel.XlApplicationInternational xlCurrencyMinusSign = int32(38)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.Office.Interop.Excel.XlApplicationInternational.xlCurrencyMinusSign" />
      <MemberSignature Language="VB.NET" Value="xlCurrencyMinusSign" />
      <MemberSignature Language="C++ CLI" Value="xlCurrencyMinusSign" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlApplicationInternational</ReturnType>
      </ReturnValue>
      <MemberValue>38</MemberValue>
      <Docs>
        <summary>
          <b>True</b> if you’re using a minus sign for negative numbers; <b>False</b> if you’re using parentheses.</summary>
      </Docs>
    </Member>
    <Member MemberName="xlCurrencyNegative">
      <MemberSignature Language="C#" Value="xlCurrencyNegative" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.Office.Interop.Excel.XlApplicationInternational xlCurrencyNegative = int32(28)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.Office.Interop.Excel.XlApplicationInternational.xlCurrencyNegative" />
      <MemberSignature Language="VB.NET" Value="xlCurrencyNegative" />
      <MemberSignature Language="C++ CLI" Value="xlCurrencyNegative" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlApplicationInternational</ReturnType>
      </ReturnValue>
      <MemberValue>28</MemberValue>
      <Docs>
        <summary>Currency format for negative currency values:0 = (symbolx) or (xsymbol)1 = -symbolx or -xsymbol2 = symbol-x or x-symbol3 = symbolx- or xsymbol-where symbol is the currency symbol of the country or region. Note that the position of the currency symbol is determined by <b>xlCurrencyBefore</b>.</summary>
      </Docs>
    </Member>
    <Member MemberName="xlCurrencySpaceBefore">
      <MemberSignature Language="C#" Value="xlCurrencySpaceBefore" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.Office.Interop.Excel.XlApplicationInternational xlCurrencySpaceBefore = int32(36)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.Office.Interop.Excel.XlApplicationInternational.xlCurrencySpaceBefore" />
      <MemberSignature Language="VB.NET" Value="xlCurrencySpaceBefore" />
      <MemberSignature Language="C++ CLI" Value="xlCurrencySpaceBefore" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlApplicationInternational</ReturnType>
      </ReturnValue>
      <MemberValue>36</MemberValue>
      <Docs>
        <summary>
          <b>True</b> if a space is added before the currency symbol.</summary>
      </Docs>
    </Member>
    <Member MemberName="xlCurrencyTrailingZeros">
      <MemberSignature Language="C#" Value="xlCurrencyTrailingZeros" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.Office.Interop.Excel.XlApplicationInternational xlCurrencyTrailingZeros = int32(39)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.Office.Interop.Excel.XlApplicationInternational.xlCurrencyTrailingZeros" />
      <MemberSignature Language="VB.NET" Value="xlCurrencyTrailingZeros" />
      <MemberSignature Language="C++ CLI" Value="xlCurrencyTrailingZeros" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlApplicationInternational</ReturnType>
      </ReturnValue>
      <MemberValue>39</MemberValue>
      <Docs>
        <summary>
          <b>True</b> if trailing zeros are displayed for zero currency values.</summary>
      </Docs>
    </Member>
    <Member MemberName="xlDateOrder">
      <MemberSignature Language="C#" Value="xlDateOrder" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.Office.Interop.Excel.XlApplicationInternational xlDateOrder = int32(32)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.Office.Interop.Excel.XlApplicationInternational.xlDateOrder" />
      <MemberSignature Language="VB.NET" Value="xlDateOrder" />
      <MemberSignature Language="C++ CLI" Value="xlDateOrder" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlApplicationInternational</ReturnType>
      </ReturnValue>
      <MemberValue>32</MemberValue>
      <Docs>
        <summary>Order of date elements:0 = month-day-year1 = day-month-year2 = year-month-day</summary>
      </Docs>
    </Member>
    <Member MemberName="xlDateSeparator">
      <MemberSignature Language="C#" Value="xlDateSeparator" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.Office.Interop.Excel.XlApplicationInternational xlDateSeparator = int32(17)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.Office.Interop.Excel.XlApplicationInternational.xlDateSeparator" />
      <MemberSignature Language="VB.NET" Value="xlDateSeparator" />
      <MemberSignature Language="C++ CLI" Value="xlDateSeparator" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlApplicationInternational</ReturnType>
      </ReturnValue>
      <MemberValue>17</MemberValue>
      <Docs>
        <summary>Date separator (/).</summary>
      </Docs>
    </Member>
    <Member MemberName="xlDayCode">
      <MemberSignature Language="C#" Value="xlDayCode" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.Office.Interop.Excel.XlApplicationInternational xlDayCode = int32(21)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.Office.Interop.Excel.XlApplicationInternational.xlDayCode" />
      <MemberSignature Language="VB.NET" Value="xlDayCode" />
      <MemberSignature Language="C++ CLI" Value="xlDayCode" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlApplicationInternational</ReturnType>
      </ReturnValue>
      <MemberValue>21</MemberValue>
      <Docs>
        <summary>Day symbol (d).</summary>
      </Docs>
    </Member>
    <Member MemberName="xlDayLeadingZero">
      <MemberSignature Language="C#" Value="xlDayLeadingZero" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.Office.Interop.Excel.XlApplicationInternational xlDayLeadingZero = int32(42)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.Office.Interop.Excel.XlApplicationInternational.xlDayLeadingZero" />
      <MemberSignature Language="VB.NET" Value="xlDayLeadingZero" />
      <MemberSignature Language="C++ CLI" Value="xlDayLeadingZero" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlApplicationInternational</ReturnType>
      </ReturnValue>
      <MemberValue>42</MemberValue>
      <Docs>
        <summary>
          <b>True</b> if a leading zero is displayed in days.</summary>
      </Docs>
    </Member>
    <Member MemberName="xlDecimalSeparator">
      <MemberSignature Language="C#" Value="xlDecimalSeparator" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.Office.Interop.Excel.XlApplicationInternational xlDecimalSeparator = int32(3)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.Office.Interop.Excel.XlApplicationInternational.xlDecimalSeparator" />
      <MemberSignature Language="VB.NET" Value="xlDecimalSeparator" />
      <MemberSignature Language="C++ CLI" Value="xlDecimalSeparator" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlApplicationInternational</ReturnType>
      </ReturnValue>
      <MemberValue>3</MemberValue>
      <Docs>
        <summary>Decimal separator.</summary>
      </Docs>
    </Member>
    <Member MemberName="xlGeneralFormatName">
      <MemberSignature Language="C#" Value="xlGeneralFormatName" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.Office.Interop.Excel.XlApplicationInternational xlGeneralFormatName = int32(26)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.Office.Interop.Excel.XlApplicationInternational.xlGeneralFormatName" />
      <MemberSignature Language="VB.NET" Value="xlGeneralFormatName" />
      <MemberSignature Language="C++ CLI" Value="xlGeneralFormatName" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlApplicationInternational</ReturnType>
      </ReturnValue>
      <MemberValue>26</MemberValue>
      <Docs>
        <summary>Name of the General number format.</summary>
      </Docs>
    </Member>
    <Member MemberName="xlHourCode">
      <MemberSignature Language="C#" Value="xlHourCode" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.Office.Interop.Excel.XlApplicationInternational xlHourCode = int32(22)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.Office.Interop.Excel.XlApplicationInternational.xlHourCode" />
      <MemberSignature Language="VB.NET" Value="xlHourCode" />
      <MemberSignature Language="C++ CLI" Value="xlHourCode" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlApplicationInternational</ReturnType>
      </ReturnValue>
      <MemberValue>22</MemberValue>
      <Docs>
        <summary>Hour symbol (h).</summary>
      </Docs>
    </Member>
    <Member MemberName="xlLeftBrace">
      <MemberSignature Language="C#" Value="xlLeftBrace" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.Office.Interop.Excel.XlApplicationInternational xlLeftBrace = int32(12)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.Office.Interop.Excel.XlApplicationInternational.xlLeftBrace" />
      <MemberSignature Language="VB.NET" Value="xlLeftBrace" />
      <MemberSignature Language="C++ CLI" Value="xlLeftBrace" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlApplicationInternational</ReturnType>
      </ReturnValue>
      <MemberValue>12</MemberValue>
      <Docs>
        <summary>Character used instead of the left brace ({) in array literals.</summary>
      </Docs>
    </Member>
    <Member MemberName="xlLeftBracket">
      <MemberSignature Language="C#" Value="xlLeftBracket" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.Office.Interop.Excel.XlApplicationInternational xlLeftBracket = int32(10)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.Office.Interop.Excel.XlApplicationInternational.xlLeftBracket" />
      <MemberSignature Language="VB.NET" Value="xlLeftBracket" />
      <MemberSignature Language="C++ CLI" Value="xlLeftBracket" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlApplicationInternational</ReturnType>
      </ReturnValue>
      <MemberValue>10</MemberValue>
      <Docs>
        <summary>Character used instead of the left bracket ([) in R1C1-style relative references.</summary>
      </Docs>
    </Member>
    <Member MemberName="xlListSeparator">
      <MemberSignature Language="C#" Value="xlListSeparator" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.Office.Interop.Excel.XlApplicationInternational xlListSeparator = int32(5)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.Office.Interop.Excel.XlApplicationInternational.xlListSeparator" />
      <MemberSignature Language="VB.NET" Value="xlListSeparator" />
      <MemberSignature Language="C++ CLI" Value="xlListSeparator" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlApplicationInternational</ReturnType>
      </ReturnValue>
      <MemberValue>5</MemberValue>
      <Docs>
        <summary>List separator.</summary>
      </Docs>
    </Member>
    <Member MemberName="xlLowerCaseColumnLetter">
      <MemberSignature Language="C#" Value="xlLowerCaseColumnLetter" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.Office.Interop.Excel.XlApplicationInternational xlLowerCaseColumnLetter = int32(9)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.Office.Interop.Excel.XlApplicationInternational.xlLowerCaseColumnLetter" />
      <MemberSignature Language="VB.NET" Value="xlLowerCaseColumnLetter" />
      <MemberSignature Language="C++ CLI" Value="xlLowerCaseColumnLetter" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlApplicationInternational</ReturnType>
      </ReturnValue>
      <MemberValue>9</MemberValue>
      <Docs>
        <summary>Lowercase column letter.</summary>
      </Docs>
    </Member>
    <Member MemberName="xlLowerCaseRowLetter">
      <MemberSignature Language="C#" Value="xlLowerCaseRowLetter" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.Office.Interop.Excel.XlApplicationInternational xlLowerCaseRowLetter = int32(8)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.Office.Interop.Excel.XlApplicationInternational.xlLowerCaseRowLetter" />
      <MemberSignature Language="VB.NET" Value="xlLowerCaseRowLetter" />
      <MemberSignature Language="C++ CLI" Value="xlLowerCaseRowLetter" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlApplicationInternational</ReturnType>
      </ReturnValue>
      <MemberValue>8</MemberValue>
      <Docs>
        <summary>Lowercase row letter.</summary>
      </Docs>
    </Member>
    <Member MemberName="xlMDY">
      <MemberSignature Language="C#" Value="xlMDY" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.Office.Interop.Excel.XlApplicationInternational xlMDY = int32(44)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.Office.Interop.Excel.XlApplicationInternational.xlMDY" />
      <MemberSignature Language="VB.NET" Value="xlMDY" />
      <MemberSignature Language="C++ CLI" Value="xlMDY" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlApplicationInternational</ReturnType>
      </ReturnValue>
      <MemberValue>44</MemberValue>
      <Docs>
        <summary>
          <b>True</b> if the date order is month-day-year for dates displayed in the long form; <b>False</b> if the date order is day-month-year.</summary>
      </Docs>
    </Member>
    <Member MemberName="xlMetric">
      <MemberSignature Language="C#" Value="xlMetric" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.Office.Interop.Excel.XlApplicationInternational xlMetric = int32(35)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.Office.Interop.Excel.XlApplicationInternational.xlMetric" />
      <MemberSignature Language="VB.NET" Value="xlMetric" />
      <MemberSignature Language="C++ CLI" Value="xlMetric" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlApplicationInternational</ReturnType>
      </ReturnValue>
      <MemberValue>35</MemberValue>
      <Docs>
        <summary>
          <b>True</b> if you’re using the metric system; <b>False</b> if you’re using the English measurement system.</summary>
      </Docs>
    </Member>
    <Member MemberName="xlMinuteCode">
      <MemberSignature Language="C#" Value="xlMinuteCode" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.Office.Interop.Excel.XlApplicationInternational xlMinuteCode = int32(23)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.Office.Interop.Excel.XlApplicationInternational.xlMinuteCode" />
      <MemberSignature Language="VB.NET" Value="xlMinuteCode" />
      <MemberSignature Language="C++ CLI" Value="xlMinuteCode" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlApplicationInternational</ReturnType>
      </ReturnValue>
      <MemberValue>23</MemberValue>
      <Docs>
        <summary>Minute symbol (m).</summary>
      </Docs>
    </Member>
    <Member MemberName="xlMonthCode">
      <MemberSignature Language="C#" Value="xlMonthCode" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.Office.Interop.Excel.XlApplicationInternational xlMonthCode = int32(20)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.Office.Interop.Excel.XlApplicationInternational.xlMonthCode" />
      <MemberSignature Language="VB.NET" Value="xlMonthCode" />
      <MemberSignature Language="C++ CLI" Value="xlMonthCode" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlApplicationInternational</ReturnType>
      </ReturnValue>
      <MemberValue>20</MemberValue>
      <Docs>
        <summary>Month symbol (m).</summary>
      </Docs>
    </Member>
    <Member MemberName="xlMonthLeadingZero">
      <MemberSignature Language="C#" Value="xlMonthLeadingZero" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.Office.Interop.Excel.XlApplicationInternational xlMonthLeadingZero = int32(41)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.Office.Interop.Excel.XlApplicationInternational.xlMonthLeadingZero" />
      <MemberSignature Language="VB.NET" Value="xlMonthLeadingZero" />
      <MemberSignature Language="C++ CLI" Value="xlMonthLeadingZero" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlApplicationInternational</ReturnType>
      </ReturnValue>
      <MemberValue>41</MemberValue>
      <Docs>
        <summary>
          <b>True</b> if a leading zero is displayed in months (when months are displayed as numbers).</summary>
      </Docs>
    </Member>
    <Member MemberName="xlMonthNameChars">
      <MemberSignature Language="C#" Value="xlMonthNameChars" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.Office.Interop.Excel.XlApplicationInternational xlMonthNameChars = int32(30)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.Office.Interop.Excel.XlApplicationInternational.xlMonthNameChars" />
      <MemberSignature Language="VB.NET" Value="xlMonthNameChars" />
      <MemberSignature Language="C++ CLI" Value="xlMonthNameChars" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlApplicationInternational</ReturnType>
      </ReturnValue>
      <MemberValue>30</MemberValue>
      <Docs>
        <summary>Always returns three characters for backward compatibility. Abbreviated month names are read from Microsoft Windows and can be any length.</summary>
      </Docs>
    </Member>
    <Member MemberName="xlNoncurrencyDigits">
      <MemberSignature Language="C#" Value="xlNoncurrencyDigits" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.Office.Interop.Excel.XlApplicationInternational xlNoncurrencyDigits = int32(29)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.Office.Interop.Excel.XlApplicationInternational.xlNoncurrencyDigits" />
      <MemberSignature Language="VB.NET" Value="xlNoncurrencyDigits" />
      <MemberSignature Language="C++ CLI" Value="xlNoncurrencyDigits" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlApplicationInternational</ReturnType>
      </ReturnValue>
      <MemberValue>29</MemberValue>
      <Docs>
        <summary>Number of decimal digits to be used in noncurrency formats.</summary>
      </Docs>
    </Member>
    <Member MemberName="xlNonEnglishFunctions">
      <MemberSignature Language="C#" Value="xlNonEnglishFunctions" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.Office.Interop.Excel.XlApplicationInternational xlNonEnglishFunctions = int32(34)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.Office.Interop.Excel.XlApplicationInternational.xlNonEnglishFunctions" />
      <MemberSignature Language="VB.NET" Value="xlNonEnglishFunctions" />
      <MemberSignature Language="C++ CLI" Value="xlNonEnglishFunctions" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlApplicationInternational</ReturnType>
      </ReturnValue>
      <MemberValue>34</MemberValue>
      <Docs>
        <summary>
          <b>True</b> if you’re not displaying functions in English.</summary>
      </Docs>
    </Member>
    <Member MemberName="xlRightBrace">
      <MemberSignature Language="C#" Value="xlRightBrace" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.Office.Interop.Excel.XlApplicationInternational xlRightBrace = int32(13)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.Office.Interop.Excel.XlApplicationInternational.xlRightBrace" />
      <MemberSignature Language="VB.NET" Value="xlRightBrace" />
      <MemberSignature Language="C++ CLI" Value="xlRightBrace" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlApplicationInternational</ReturnType>
      </ReturnValue>
      <MemberValue>13</MemberValue>
      <Docs>
        <summary>Character used instead of the right brace (}) in array literals.</summary>
      </Docs>
    </Member>
    <Member MemberName="xlRightBracket">
      <MemberSignature Language="C#" Value="xlRightBracket" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.Office.Interop.Excel.XlApplicationInternational xlRightBracket = int32(11)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.Office.Interop.Excel.XlApplicationInternational.xlRightBracket" />
      <MemberSignature Language="VB.NET" Value="xlRightBracket" />
      <MemberSignature Language="C++ CLI" Value="xlRightBracket" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlApplicationInternational</ReturnType>
      </ReturnValue>
      <MemberValue>11</MemberValue>
      <Docs>
        <summary>Character used instead of the right bracket (]) in R1C1-style references.</summary>
      </Docs>
    </Member>
    <Member MemberName="xlRowSeparator">
      <MemberSignature Language="C#" Value="xlRowSeparator" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.Office.Interop.Excel.XlApplicationInternational xlRowSeparator = int32(15)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.Office.Interop.Excel.XlApplicationInternational.xlRowSeparator" />
      <MemberSignature Language="VB.NET" Value="xlRowSeparator" />
      <MemberSignature Language="C++ CLI" Value="xlRowSeparator" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlApplicationInternational</ReturnType>
      </ReturnValue>
      <MemberValue>15</MemberValue>
      <Docs>
        <summary>Character used to separate rows in array literals.</summary>
      </Docs>
    </Member>
    <Member MemberName="xlSecondCode">
      <MemberSignature Language="C#" Value="xlSecondCode" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.Office.Interop.Excel.XlApplicationInternational xlSecondCode = int32(24)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.Office.Interop.Excel.XlApplicationInternational.xlSecondCode" />
      <MemberSignature Language="VB.NET" Value="xlSecondCode" />
      <MemberSignature Language="C++ CLI" Value="xlSecondCode" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlApplicationInternational</ReturnType>
      </ReturnValue>
      <MemberValue>24</MemberValue>
      <Docs>
        <summary>Second symbol (s).</summary>
      </Docs>
    </Member>
    <Member MemberName="xlThousandsSeparator">
      <MemberSignature Language="C#" Value="xlThousandsSeparator" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.Office.Interop.Excel.XlApplicationInternational xlThousandsSeparator = int32(4)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.Office.Interop.Excel.XlApplicationInternational.xlThousandsSeparator" />
      <MemberSignature Language="VB.NET" Value="xlThousandsSeparator" />
      <MemberSignature Language="C++ CLI" Value="xlThousandsSeparator" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlApplicationInternational</ReturnType>
      </ReturnValue>
      <MemberValue>4</MemberValue>
      <Docs>
        <summary>Zero or thousands separator.</summary>
      </Docs>
    </Member>
    <Member MemberName="xlTimeLeadingZero">
      <MemberSignature Language="C#" Value="xlTimeLeadingZero" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.Office.Interop.Excel.XlApplicationInternational xlTimeLeadingZero = int32(45)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.Office.Interop.Excel.XlApplicationInternational.xlTimeLeadingZero" />
      <MemberSignature Language="VB.NET" Value="xlTimeLeadingZero" />
      <MemberSignature Language="C++ CLI" Value="xlTimeLeadingZero" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlApplicationInternational</ReturnType>
      </ReturnValue>
      <MemberValue>45</MemberValue>
      <Docs>
        <summary>
          <b>True</b> if a leading zero is displayed in times.</summary>
      </Docs>
    </Member>
    <Member MemberName="xlTimeSeparator">
      <MemberSignature Language="C#" Value="xlTimeSeparator" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.Office.Interop.Excel.XlApplicationInternational xlTimeSeparator = int32(18)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.Office.Interop.Excel.XlApplicationInternational.xlTimeSeparator" />
      <MemberSignature Language="VB.NET" Value="xlTimeSeparator" />
      <MemberSignature Language="C++ CLI" Value="xlTimeSeparator" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlApplicationInternational</ReturnType>
      </ReturnValue>
      <MemberValue>18</MemberValue>
      <Docs>
        <summary>Time separator (:).</summary>
      </Docs>
    </Member>
    <Member MemberName="xlUpperCaseColumnLetter">
      <MemberSignature Language="C#" Value="xlUpperCaseColumnLetter" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.Office.Interop.Excel.XlApplicationInternational xlUpperCaseColumnLetter = int32(7)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.Office.Interop.Excel.XlApplicationInternational.xlUpperCaseColumnLetter" />
      <MemberSignature Language="VB.NET" Value="xlUpperCaseColumnLetter" />
      <MemberSignature Language="C++ CLI" Value="xlUpperCaseColumnLetter" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlApplicationInternational</ReturnType>
      </ReturnValue>
      <MemberValue>7</MemberValue>
      <Docs>
        <summary>Uppercase column letter.</summary>
      </Docs>
    </Member>
    <Member MemberName="xlUpperCaseRowLetter">
      <MemberSignature Language="C#" Value="xlUpperCaseRowLetter" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.Office.Interop.Excel.XlApplicationInternational xlUpperCaseRowLetter = int32(6)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.Office.Interop.Excel.XlApplicationInternational.xlUpperCaseRowLetter" />
      <MemberSignature Language="VB.NET" Value="xlUpperCaseRowLetter" />
      <MemberSignature Language="C++ CLI" Value="xlUpperCaseRowLetter" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlApplicationInternational</ReturnType>
      </ReturnValue>
      <MemberValue>6</MemberValue>
      <Docs>
        <summary>Uppercase row letter (for R1C1-style references).</summary>
      </Docs>
    </Member>
    <Member MemberName="xlWeekdayNameChars">
      <MemberSignature Language="C#" Value="xlWeekdayNameChars" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.Office.Interop.Excel.XlApplicationInternational xlWeekdayNameChars = int32(31)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.Office.Interop.Excel.XlApplicationInternational.xlWeekdayNameChars" />
      <MemberSignature Language="VB.NET" Value="xlWeekdayNameChars" />
      <MemberSignature Language="C++ CLI" Value="xlWeekdayNameChars" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlApplicationInternational</ReturnType>
      </ReturnValue>
      <MemberValue>31</MemberValue>
      <Docs>
        <summary>Always returns three characters for backward compatibility. Abbreviated weekday names are read from Microsoft Windows and can be any length.</summary>
      </Docs>
    </Member>
    <Member MemberName="xlYearCode">
      <MemberSignature Language="C#" Value="xlYearCode" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.Office.Interop.Excel.XlApplicationInternational xlYearCode = int32(19)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.Office.Interop.Excel.XlApplicationInternational.xlYearCode" />
      <MemberSignature Language="VB.NET" Value="xlYearCode" />
      <MemberSignature Language="C++ CLI" Value="xlYearCode" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlApplicationInternational</ReturnType>
      </ReturnValue>
      <MemberValue>19</MemberValue>
      <Docs>
        <summary>Year symbol in number formats (y).</summary>
      </Docs>
    </Member>
  </Members>
</Type>